// Flexbox Setting
// Define $flexbox as .flexbox
// Default: flex-wrap: wrap, align-items: flex-start */
$flexbox: ".flexbox"
$item: ".item"
$container-prefix: "fi-"
$partition-size: 1 2 3 4 5 6 8 10 12
$partition-min-size: 100
$scale-factor: .8

#{$flexbox}
  display: flex
  flex-wrap: wrap
  align-items: flex-start

  // Flexbox vertical and reverse
  &.#{$container-prefix}reverse
    flex-direction: row-reverse
  &.#{$container-prefix}vertical
    flex-direction: column
    &.#{$container-prefix}reverse
      flex-direction: column-reverse

  // Flexbox item initialize
  & > *
    box-sizing: border-box
    flex: 0 0 auto

  // Flexbox Properties
  &.#{$container-prefix}inline
    display: inline-flex

  &.#{$container-prefix}nowrap
    flex-wrap: nowrap

  // Flexbox Alignment
  $vertical-alignments: "top" flex-start, "bottom" flex-end, "middle" center, "fill" stretch
  @each $name, $value in $vertical-alignments
    &.#{$container-prefix}#{$name}
      align-items: $value

  $alignments: "left" flex-start, "right" flex-end, "center" center, "around" space-around, "between" space-between, "evenly" space-evenly
  @each $name, $value in $alignments
    &.#{$container-prefix}#{$name}
      justify-content: $value

  // Shorten Properties Combination
  &.#{$container-prefix}btn-group
    @extend .#{$container-prefix}inline
    @extend .#{$container-prefix}nowrap

  &.#{$container-prefix}nav
    @extend .#{$container-prefix}fill
    @extend .#{$container-prefix}nowrap

  &.#{$container-prefix}nav-wide
    @extend .#{$container-prefix}fill
    @extend .#{$container-prefix}nowrap
    @extend .#{$container-prefix}between

  &.#{$container-prefix}abs-center
    @extend .#{$container-prefix}center
    @extend .#{$container-prefix}middle

  // Gutters
  $units: "" 1rem, "-px" 10px, "-em" 1em, "-mm" 1mm
  $gutters-size: "-s" 0.5, "" 1, "-l" 1.5, "-xl" 2, "-xxl" 3

  &.#{$container-prefix}gutters
    @each $unit, $base in $units
      @each $size, $multiplier in $gutters-size
        &#{$unit + $size}
          top: -$base * $multiplier
          left: -$base * $multiplier
          margin-right: -$base * $multiplier
          margin-bottom: -$base * $multiplier
          & > *
            padding-top: $base * $multiplier
            padding-left: $base * $multiplier


  // Gutters siblings and childs adjustment
  &[class*="#{$container-prefix}gutters"]
    position: relative

    & > #{$flexbox}[class*="#{$container-prefix}gutters"]
      padding: 0
      margin: 0
      top: 0
      left: 0

    &.vertical
      & + #{$flexbox}
        &[class*="#{$container-prefix}gutters"]
          margin: 0

    @each $unit, $base in $units
      @each $size, $multiplier in $gutters-size
        & + #{$flexbox}
          &.#{$container-prefix}gutters
            &#{$unit + $size}
              margin-top: $base * $multiplier

  // Item partition
  & > #{$item}
    flex-grow: 1
    flex-shrink: 1

  @each $size in $partition-size
    // -rwd will auto adjust the width in each breakpoint and divided by 2 each
    & > #{$item}-#{$size}, & > #{$item}-rwd-#{$size}
      width: 100% / $size

  &.vertical
    & > *
      width: auto

    @each $size in $partition-size
      & > #{$item}-#{$size}
        height: 100% / $size

  // Pop & Shift
  & > #{$item}-pop
    margin: 0 0 0 auto

  & > #{$item}-shift
    margin: 0 auto 0 0

  &.#{$container-prefix}vertical
    & > #{$item}-pop
      margin: 0 0 auto
    & > #{$item}-shift
      margin: auto 0 0

  &.#{$container-prefix}reverse
    & > #{$item}-shift
      margin: 0 0 0 auto
    & > #{$item}-pop
      margin: 0 auto 0 0
    &.#{$container-prefix}vertical
      & > #{$item}-pop
        margin: auto 0 0
      & > #{$item}-shift
        margin: 0 0 auto

// Responsive Web Design
// [Code] [Min-Width] [Max-Width] [Division]
$screen-media: "rg" 1025 1280 8, "md" 768 1024 4, "sm" 481 767 3, "xs" 320 480 2

// Mixin for create each breakpoints media query
@each $code, $min, $max, $partition in $screen-media
  @media (min-width: $min + 'px') and (max-width: $max + 'px')
    @for $index from 1 through length($partition-size)
      $size: nth($partition-size, $index)
      $mppb: floor($min / $partition-min-size)
      @if $size <= $mppb
        #{$flexbox}
          & > #{$item}-#{$code}-#{$size}
            width: 100% / $size
      @if $partition < length($partition-size)
        // Calculate the scale rate after the partition number has changed
        // The scale-factor will affect the final partition scale
        // > 1 less partition in each breakpoint
        // < 1 more partition  in each breakpoint
        $scale: max((length($partition-size) / $partition) * $scale-factor, 1)
        // Get the offset
        $offset: min(nth($partition-size, max(ceil($index / $scale), 1)), $index)
        // Generate the rwd item if the offset is not same as current index
        @if $offset != $index
          #{$flexbox}
            & > #{$item}-rwd-#{$size}
              width: 100% / $offset
    // Vertical flexbox has no width
    #{$flexbox}.vertical
      & > *
        width: auto
